# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.98.0"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."


  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Make development build"
  lane :dev do

    # Make sure we start off with a clean slate
    ensure_git_status_clean

    ## Increment build number to current date
    #build_number = Time.new.strftime("%Y.%m.%d")
    #increment_build_number build_number: build_number

    ## Set version number to the one at the top of the CHANGELOG
    #readme = File.read("../docs/CHANGELOG.md")
    #latest_version = readme.split("\n## ").first
    #first_line = latest_version.split("\n").first
    #version_number = first_line.split(" ")[1]

    #increment_version_number release_task: version_number

    ## Generate release notes from CHANGELOG
    #release_notes = latest_version.split("\n")[1..-1].join("\n")

    match(type: "development") # more information: https://codesigning.guide

    # Build jsbundle for ios
    sh "cd .. && ./bundle-ios.sh"

    # Build your app - more options available
    gym(
      scheme: "xhub",
      project: '../xhub/ios/xhub.xcodeproj',
      output_directory: './Builds/'
    )

    markdown_type = 1
    hockey(
      api_token: ENV['HOCKEY_API_TOKEN'],
      notes_type: markdown_type,
      notes: release_notes,
    )

    # Make sure our directory is clean, except for changes Fastlane has made
    clean_build_artifacts

    # Tag release and push to GitHub
    commit_version_bump message: "Deploying version #{version_number}."
    add_git_tag tag: version_number
    push_to_git_remote

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    match(type: "adhoc") # more information: https://codesigning.guide

    # Build your app - more options available
    gym(
      scheme: "xhub-release",
      project: '../xhub/ios/xhub.xcodeproj'
    )

    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :appstore do
    # match(type: "appstore")
    # snapshot
    gym # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
